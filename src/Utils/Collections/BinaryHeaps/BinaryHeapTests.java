package Utils.Collections.BinaryHeaps;

import Utils.Timers.AbstractTimer;
import Utils.Timers.SYSTimer;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

import static Utils.ConsolePrinting.*;

public class BinaryHeapTests {

    static List<Integer> input = new ArrayList<>(Arrays.asList

    public static void arrayBasedTest() {
        ArrayBasedBinaryHeap bh = new ArrayBasedBinaryHeap(Integer.class).setSize(input.size());
        for(Integer i : input) {
            bh.push(i);
            println(bh);
        }
    }

    public static void listBasedTest() {
        ListBasedBinaryHeap<Integer> bh = new ListBasedBinaryHeap<>();
        for(Integer i : input) {
            bh.push(i);
            println(bh);
        }
    }

    public static void llBasedTest() {
        LinkedListBasedBinaryHeap<Integer> bh = new LinkedListBasedBinaryHeap<>();
        for(Integer i : input) {
            bh.push(i);
            println(bh);
        }
    }

    public static void main(String args[]) {

        double total_time = 0;
        AbstractTimer timer = new SYSTimer(AbstractTimer.TimeUnit.SECONDS);
        int i;
        for (i = 1; i <= 10; i++) {
            timer.start();

            llBasedTest();
//            listBasedTest();
//            arrayBasedTest();

            timer.stop();
            total_time += timer.getElapsedTime();
            println(timer);
        }
        println(fgGreen, total_time, ":", total_time / (i-1));

    }
}
